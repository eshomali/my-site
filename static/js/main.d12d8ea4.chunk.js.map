{"version":3,"sources":["logo.svg","Home.js","Projects.js","Nav.js","App.js","serviceWorker.js","index.js","img/cat.jpg"],"names":["module","exports","__webpack_require__","p","Home","Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","networkRequest","bind","assertThisInitialized","myHomepage","react_default","a","createElement","Fragment","class","Accordion_default","defaultActiveKey","Card_default","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","Promise","resolve","setTimeout","_this2","wd","ht","_useState","useState","_useState2","slicedToArray","show","setShow","_useState3","_useState4","isLoading","setLoading","handleClose","useEffect","then","className","bg","style","width","height","onClick","Text","window","location","open","id","Modal_default","onHide","closeButton","Title","Card","href","target","Footer","Button_default","disabled","scroll","top","innerHeight","left","behavior","Nav","thisDate","Date","toLocaleTimeString","data-content","App","src_Nav","src_Home","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d12d8ea4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, useState, useEffect } from 'react';\r\nimport profileImage from './img/cat.jpg';\r\nimport profileImage2 from './img/cat.jpg';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport Projects from './Projects';\r\nimport { tsImportEqualsDeclaration, thisExpression } from '@babel/types';\r\n//import { Link } from 'react-router';\r\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n\r\n    Accordion() { //Example of an accordion-card structure\r\n        return (\r\n            <>\r\n            <div class=\"AccordionParent\">\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            Click me!\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>Hello! I'm the body</Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                            Click me!\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                        <Card.Body>Hello! I'm another body</Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    networkRequest() {\r\n        return new Promise(resolve => setTimeout(resolve, 2000));\r\n    }\r\n\r\n    myHomepage() {\r\n        const wd = \"16rem\";\r\n        const ht = \"16rem\";\r\n        const [show, setShow] = useState(false);\r\n        const [isLoading, setLoading] = useState(false);\r\n\r\n        const handleClose = () => setShow(false);\r\n        const handleShow  = () => setShow(true);\r\n        const handleClick = () => setLoading(true);\r\n\r\n        const sendEmail = () => window.location = 'mailto:eshomali@gmail.com';\r\n        const linkedin  = () => window.open('https://www.linkedin.com', '_blank');\r\n        const github    = () => window.open('https://www.github.com/eshomali', '_blank');\r\n\r\n        useEffect( () => {\r\n            if (isLoading === true) {\r\n                this.networkRequest().then( () => {setLoading(false);} );\r\n            }\r\n        }, [isLoading] );\r\n\r\n        //const resume = <Badge variant=\"primary\">Resume</Badge>;\r\n\r\n        return (\r\n            <>\r\n            <div className = \"cards\">\r\n                <div className=\"myCard1\">\r\n                    <Card bg=\"warning\" style={{ width: wd, height: ht }}>\r\n                        <Card.Body onClick={handleShow}>\r\n                            <Card.Text>\r\n                                <h3>the good ol'</h3>\r\n                                Resume\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"myCard2\">\r\n                    <Card bg=\"danger\" style={{ width: wd, height: ht }}>\r\n                        <Card.Body onClick={sendEmail}>\r\n                            <Card.Text>\r\n                                <h3>send me an</h3>\r\n                                    Email\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"myCard3\">\r\n                    <Card bg=\"primary\" style={{ width: wd, height: ht }}>\r\n                        <Card.Body onClick={linkedin}>\r\n                            <Card.Text>\r\n                                <h3>connect on</h3>\r\n                                <div id=\"linkedin\">LinkedIn</div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"myCard4\">\r\n                    <Card bg=\"success\" style={{ width: wd, height: ht }}>\r\n                        <Card.Body onClick={github}>\r\n                            <Card.Text>\r\n                                <h3>checkout my</h3>\r\n                                GitHub\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            \r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title><strong><h3>Resume</h3></strong></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <>\r\n                    <div class=\"AccordionParent\">\r\n                        <Accordion defaultActiveKey=\"1\">\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <div class=\"edu_header\">\r\n                                            <h5><b>Education</b></h5>\r\n                                        </div>\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        <div class=\"edu_body\">\r\n                                            <h6><b>&nbsp;B.S.E. Computer Engineering</b></h6>\r\n                                            <em><h6><a href=\"http://www.oakland.edu\" target=\"_blank\">&nbsp;Oakland University</a></h6></em>\r\n                                        </div>\r\n                                        <li>Minor in Computer Science</li>\r\n                                        <li>Vice President, Engineering Society of Detroit</li>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h5><b>Experiences</b></h5>\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        <table id=\"t1\">\r\n                                            <tr>\r\n                                                <td>Software Engineer&nbsp;</td>\r\n                                                <td>&nbsp;&mdash;&nbsp;</td>\r\n                                                <td>&nbsp;Sept 2018 - Current</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><em>Asset Health</em></td>\r\n                                            </tr>\r\n                                            <br/>\r\n                                            <tr>\r\n                                                <td>Computer Science Intern&nbsp;</td>\r\n                                                <td>&nbsp;&mdash;&nbsp;</td>\r\n                                                <td>&nbsp;Aug 2016 - Jul 2018</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><em>Complete Data Products</em></td>\r\n                                            </tr>\r\n                                            <br/>\r\n                                            <tr>\r\n                                                <td>Teaching Assistant&nbsp;</td>\r\n                                                <td>&nbsp;&mdash;&nbsp;</td>\r\n                                                <td>&nbsp;Sept 2017 - Dec 2017</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><em>Oakland University</em></td>\r\n                                            </tr>\r\n                                            <br/>\r\n                                            <tr>\r\n                                                <td>Electronics Technician&nbsp;</td>\r\n                                                <td>&nbsp;&mdash;&nbsp;</td>\r\n                                                <td>&nbsp;Jun 2013 - Aug 2016</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><em>Boost Mobile</em></td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h5><b>Skill Set</b></h5>\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        C, PHP, HTML, CSS, React JSX, Bootstrap\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h5><b>Projects</b></h5>\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>Autonomous Vehicle</Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </div>\r\n                    </>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Exit\r\n                    </Button>\r\n                    <Button variant=\"primary\" disabled={isLoading}\r\n                            onClick={!isLoading ? handleClick : null}>\r\n                        {isLoading ? 'Downloading....' : ' Download PDF '}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal> \r\n            </>\r\n        )\r\n    }\r\n\r\n    scrollAHV() {\r\n        window.scroll(\r\n            {   top: window.innerHeight, \r\n                left: 0, \r\n                behavior: 'smooth'  }\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.networkRequest = this.networkRequest.bind(this);\r\n        this.myHomepage = this.myHomepage.bind(this);\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n          \r\n            <div className=\"main\">\r\n                <div className=\"main-text\">\r\n                    <span id=\"main-header\"></span>\r\n                </div>\r\n                <this.myHomepage />\r\n                <div class=\"parallax-one\"></div>\r\n            </div>\r\n      \r\n        )\r\n    }\r\n};\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"projSection\">\r\n                <span id=\"custom-header\">Projects</span><br /><br />\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        const thisDate = new Date().toLocaleTimeString();\r\n\r\n        return (\r\n            <div className=\"topSection\">\r\n                <span id=\"custom-header\">Essa Shomali&nbsp;</span>\r\n                <span class=\"construction\">\r\n                    Developed in\r\n                    HTML/CSS, JavaScript,\r\n                    React JSX, Bootstrap\r\n                </span>\r\n                <span id=\"aware\">just so you're aware</span>\r\n                <span id=\"thisDate\">{thisDate}</span>\r\n\r\n                <br/>\r\n                <hr className=\"line-text\" data-content=\"<hr />\" />\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default Nav;","import React, { Component } from 'react';\n//import React from 'react';\nimport Home from './Home';\nimport Nav from './Nav';\nimport logo from './logo.svg';\nimport profileImage from './img/cat.jpg';\nimport './App.css';\nimport { Navbar, Jumbotron, Button } from 'react-bootstrap';\nimport Projects from './Projects';\n\nexport default class App extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <Nav />\n                <Home />\n            </div>\n        );\n    }\n}\n\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n/*\nApp.use(express.static(__dirname)); //here is important thing - no static directory, because all static :)\n\nApp.get(\"/*\", function(req, res) {\n  res.sendFile(path.join(__dirname, \"index.html\"));\n});\n*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cat.27dd502c.jpg\";"],"sourceRoot":""}